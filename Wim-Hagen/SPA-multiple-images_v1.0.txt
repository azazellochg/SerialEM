MacroName SPAK2fast
# SPA macro for Krios/Quantum/K2
# Buffer P is expected to have refference hole image from Low Dose View
# Wim Hagen, EMBL Heidelberg 20170309
# Credits to Chen Xu & Henning Stahlberg group
# 1) Setup Low Dose.
# 2) Buffer P should contain a Low Dose View hole image.
# 3) Adjust settings.
# 4) Add acquisition points in Navigator.
# 5) Acquire At Points.

####### SETTINGS ####### 

maxholeshift        = 100   # max beam/image shift after hole centering in nanometers

NumberShots       = 6	        # Number of shots in one hole
IS_RAD 	             = 0.75     # Radius of off-center ImageShift displacement

driftcrit                 = 2	# A/sec
driftinterval        = 5        # seconds
drifttimes 	        = 10	# max no of drift measurements

TD_low              = -0.75      # low defocus microns
TD_high             = -3	# high defocus microns
delta                    = 0.25   # defocus step microns

####### END SETTINGS ####### 

SuppressReports

ReportClock 
ticks = $RepVal1

####### Align to hole #######

MoveToNavItem

echo ===> Running align to hole ...

GoToLowDoseArea V

V
AlignTo P
ReportAlignShift
echo hole shift 1 $RepVal5 $RepVal6
holeshift = sqrt $RepVal5 * $RepVal5 + $RepVal6 * $RepVal6

if $holeshift > $maxholeshift
   ResetImageShift
   V
   AlignTo P
   ReportAlignShift
   echo hole shift 2 $RepVal5 $RepVal6
endif

MoveStage -0.025 -0.025

ReportClock
holecenteringticks = ($repVal1 - $ticks)

####### Focus #######

GoToLowDoseArea F

bigstep = $TD_low - $TD_high
ReportTargetDefocus TD

if $TD > $TD_low
   diff = $TD - $TD_low
   IncTargetDefocus -$diff
 elseif $TD > $TD_high 
   IncTargetDefocus -$delta
 else
   IncTargetDefocus $bigstep
endif

ReportTargetDefocus DefocusTarget
echo Target defocus = $DefocusTarget

CallFunction WaitForRefilling
echo ===> autofocus ...
G

ReportClock
focusticks = ($repVal1 - $ticks)

####### Drift #######

echo ===> Running Drift ...
GoToLowDoseArea T
Delay 2 sec
CallFunction WaitForRefilling

ReportClock
time1 = $RepVal1

T
Delay $driftinterval
Loop $drifttimes index
   ReportClock time2
   T
   AlignTo B
   ReportAlignShift
   dx = $reportedValue3 # in nm
   dy = $reportedValue4 # in nm
   dist = sqrt $dx * $dx + $dy * $dy
   elapsedtime = $time2 - $time1
   time1 = $time2 
   rate = 10 * ( $dist / $elapsedtime  )
   echo Rate = $rate A/sec
   echo ----------------
   
   If $rate < $driftcrit
      echo Drift is $Rate A/s after shot $index      
      break
    Elseif  $index < $drifttimes
      Delay $driftinterval
    Else
      echo Drift never got below $driftcrit : Skipping ...
      break   
   Endif
EndLoop

ReportDefocus actualdefocus
echo actual defocus = $actualdefocus

ReportClock
driftticks = ($repVal1 - $ticks)

####### Acquire images #######

GoToLowDoseArea R
delay 3 sec
ReportImageShift
isux = $RepVal1
isuy = $RepVal2

Loop $NumberShots icount
   IS_ANGLE = ( $icount - 1 ) * 360 / $NumberShots
   IS_X = $IS_RAD * sin ( $IS_ANGLE )
   IS_Y = $IS_RAD * cos ( $IS_ANGLE )
   ImageShiftByMicrons $IS_X $IS_Y
   CallFunction WaitForRefilling
   EarlyReturnNextShot 0
   R
   SetImageShift $isux $isuy
endloop

ResetImageShift 

# timing
ReportClock
recordticks = ($repVal1 - $ticks)
holetime = $holecenteringticks
focustime = $focusticks - $holecenteringticks
drifttime = $driftticks - $focusticks
recordtime = $recordticks - $driftticks
echo timing $holetime $focustime $drifttime $recordtime $recordticks seconds

echo ===> Done ...
echo ====================================================

Function WaitForRefilling
   
   Loop 10
      AreDewarsFilling
      If $repVal1 == 1
         echo LN2 is Refilling
       Else
         Break   
      Endif   
      Delay 1 min
   EndLoop
   
endfunction
