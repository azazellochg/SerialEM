MacroName SPAK2aligntomap

# SPA align to virtual map macro for Krios/K2 as described in:
# https://www.biorxiv.org/content/early/2018/08/20/389502
# Wim Hagen, EMBL Heidelberg 20181230

# Script does not return images, it only saves frames!
# Edit the Acquire images if necessary.

####### SERIALEM SETTINGS ####### 

# SerialEM control panel Buffer Controls, Read into Buffer K

####### SETTINGS ####### 

driftcrit                 = 3	# A/sec
driftinterval        = 5        # seconds
drifttimes 	        = 5	# max no of drift measurements

TD_low              = -0.8       # low defocus microns
TD_high             = -2      # high defocus microns
delta                    = 0.2    # defocus step microns
focusdistance   = 7      # autofocus every x micrometers stage movement

####### END SETTINGS ####### 

SuppressReports
ReportClock 
ticks = $RepVal1

####### Align to map #######

CallFunction AutoFillDarkRef
CallFunction MapCentering

ReportClock
holecenteringticks = ($repVal1 - $ticks)

####### Focus #######

CallFunction AutoFillDarkRef
CallFunction AutoFocusSPA

ReportClock
focusticks = ($repVal1 - $ticks)

####### Drift #######

CallFunction AutoFillDarkRef
CallFunction DriftSPA

ReportClock
driftticks = ($repVal1 - $ticks)

####### Acquire image #######

ReportDefocus actualdefocus
echo actual defocus = $actualdefocus

GoToLowDoseArea R
CallFunction AutoFillDarkRef
EarlyReturnNextShot 0
R

GoToLowDoseArea V

# timing
ReportClock
recordticks = ($repVal1 - $ticks)
holetime = $holecenteringticks
focustime = $focusticks - $holecenteringticks
drifttime = $driftticks - $focusticks
recordtime = $recordticks - $driftticks
echo timing: center $holetime sec, focus $focustime sec, drift $drifttime sec, acquire $recordtime sec, total $recordticks sec

Echo ===> Done ...
Echo ====================================================


####### Functions #######

Function MapCentering

Echo ===> Running align to map ...

LoadNavMap 

V
ImageProperties A xsize ysize bin exp pixel
if $xsize < $ysize
   halfsize = 0.95 * $pixel * $ysize / 2 / 1000
elseif $xsize > $ysize
   halfsize = 0.95 * $pixel * $xsize / 2 / 1000
endif

ReportProperty realignitemminmarginneeded minmarginneeded
SetProperty realignitemminmarginneeded $halfsize

AlignTo K 1 1

SetProperty realignitemminmarginneeded $minmarginneeded

ReportAlignShift
TotalShift = SQRT ( ( POWER $RepVal5 2 ) + ( POWER $RepVal6 2 ) ) / 1000
Echo Total map shift = $TotalShift micrometer

EndFunction 

############################

Function DriftSPA
Echo ===> Running Drift ...
GoToLowDoseArea T
ChangeFocus -3

ReportClock
time1 = $RepVal1

T
Delay $driftinterval
Loop $drifttimes index
    ReportClock time2
	T
	AlignTo B
	ReportAlignShift
	dx = $reportedValue3 # in nm
	dy = $reportedValue4 # in nm
	dist = sqrt $dx * $dx + $dy * $dy
	elapsedtime = $time2 - $time1
                      time1 = $time2 
	rate = 10 * ( $dist / $elapsedtime  )
	echo Rate = $rate A/sec
	echo ----------------
	
	If $rate < $driftcrit
	    echo Drift is $Rate A/s after shot $index      
	    break
	Elseif  $index < $drifttimes
	    Delay $driftinterval
	Else
	    echo Drift never got below $driftcrit : Skipping ...
	    break   
	Endif
EndLoop
ChangeFocus 3
EndFunction 

############################

Function AutoFocusSPA
SuppressReports
ReportNavItem 

Echo ===> focus ... 

ReportTargetDefocus TD 
if $TD > $TD_low
   SetTargetDefocus $TD_low
   diff = $TD_low - $TD
   ChangeFocus $diff
   ReportTargetDefocus
   echo Target defocus = $RepVal1 , focus changed by $diff
elseif $TD <= $TD_low AND $TD > $TD_high
   IncTargetDefocus -$delta
   ChangeFocus -$delta
   ReportTargetDefocus
   echo Target defocus = $RepVal1 , focus changed by -$delta
elseif $TD <= $TD_high
   SetTargetDefocus $TD_low
   diff = $TD_low - $TD
   ChangeFocus $diff
   ReportTargetDefocus
endif

GoToLowDoseArea F

echo navigator acquisition index is $navAcqIndex
if $navAcqIndex == 1
   ReportStageXYZ
   stagerefx := $RepVal1
   stagerefy := $RepVal2
   stagerefz := $RepVal3
endif

### work out stage xyz distance since last autofocus
ReportStageXYZ
stagecurrentx = $RepVal1
stagecurrenty = $RepVal2
stagecurrentz = $RepVal3
stagex = $stagerefx - $stagecurrentx
stagey = $stagerefy - $stagecurrenty
stagemovementxy = sqrt $stagex * $stagex + $stagey * $stagey
stagez = $stagerefz - $stagecurrentz
echo delta stage xyz: $stagex $stagey $stagez

# condition to autofocus, distance, z-change, or first item 
if $stagemovementxy > $focusdistance OR abs ( $stagez ) > 0.5 OR $navAcqIndex == 1
   G
   ReportStageXYZ
   stagerefx := $RepVal1
   stagerefy := $RepVal2
   stagerefz := $RepVal3
endif

EndFunction 

############################

Function AutoFillDarkRef
SuppressReports
AreDewarsFilling
if $reportedvalue1 == 1
   echo dewars are filling, acquiring HardwareDarkRef
   UpdateHWDarkRef  0
endif

loop 10
   AreDewarsFilling
   if $reportedvalue1 == 0
      break
   elseif $reportedvalue1 == 1
      echo dewars are filling
      delay 60 sec
   endif
endloop

endfunction

############################
